// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _mergeClusters_HH_
#define _mergeClusters_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct mergeClusters : public sc_module {
    // Port declarations 16
    sc_in< sc_lv<16> > ieta1;
    sc_in< sc_lv<16> > iphi1;
    sc_in< sc_lv<16> > itet1;
    sc_in< sc_lv<16> > icet1;
    sc_in< sc_lv<16> > ieta2;
    sc_in< sc_lv<16> > iphi2;
    sc_in< sc_lv<16> > itet2;
    sc_in< sc_lv<16> > icet2;
    sc_out< sc_lv<16> > ap_return_0;
    sc_out< sc_lv<16> > ap_return_1;
    sc_out< sc_lv<16> > ap_return_2;
    sc_out< sc_lv<16> > ap_return_3;
    sc_out< sc_lv<16> > ap_return_4;
    sc_out< sc_lv<16> > ap_return_5;
    sc_out< sc_lv<16> > ap_return_6;
    sc_out< sc_lv<16> > ap_return_7;


    // Module declarations
    mergeClusters(sc_module_name name);
    SC_HAS_PROCESS(mergeClusters);

    ~mergeClusters();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<1> > tmp_fu_72_p2;
    sc_signal< sc_lv<1> > tmp_1_fu_78_p2;
    sc_signal< sc_lv<1> > or_cond_fu_84_p2;
    sc_signal< sc_lv<1> > tmp_2_fu_90_p2;
    sc_signal< sc_lv<1> > sel_tmp_fu_126_p2;
    sc_signal< sc_lv<16> > tmp_4_fu_102_p2;
    sc_signal< sc_lv<16> > tmp_8_fu_120_p2;
    sc_signal< sc_lv<16> > sel_tmp1_fu_132_p3;
    sc_signal< sc_lv<16> > tmp_3_fu_96_p2;
    sc_signal< sc_lv<16> > sel_tmp5_fu_148_p3;
    sc_signal< sc_lv<16> > sel_tmp9_fu_164_p3;
    sc_signal< sc_lv<16> > sel_tmp2_fu_180_p3;
    sc_signal< sc_lv<16> > sel_tmp3_fu_196_p3;
    sc_signal< sc_lv<16> > sel_tmp4_fu_212_p3;
    sc_signal< sc_lv<16> > tmp_5_fu_108_p2;
    sc_signal< sc_lv<16> > tmp_7_fu_114_p2;
    sc_signal< sc_lv<16> > sel_tmp6_fu_228_p3;
    sc_signal< sc_lv<16> > sel_tmp7_fu_244_p3;
    sc_signal< sc_lv<16> > eta1_write_assign_fu_220_p3;
    sc_signal< sc_lv<16> > phi1_write_assign_fu_172_p3;
    sc_signal< sc_lv<16> > tet1_write_assign_fu_140_p3;
    sc_signal< sc_lv<16> > cet1_write_assign_fu_156_p3;
    sc_signal< sc_lv<16> > eta2_write_assign_fu_188_p3;
    sc_signal< sc_lv<16> > phi2_write_assign_fu_204_p3;
    sc_signal< sc_lv<16> > tet2_write_assign_fu_236_p3;
    sc_signal< sc_lv<16> > cet2_write_assign_fu_252_p3;
    static const bool ap_const_boolean_1;
    static const sc_lv<16> ap_const_lv16_0;
    static const sc_lv<16> ap_const_lv16_2;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    // Thread declarations
    void thread_ap_return_0();
    void thread_ap_return_1();
    void thread_ap_return_2();
    void thread_ap_return_3();
    void thread_ap_return_4();
    void thread_ap_return_5();
    void thread_ap_return_6();
    void thread_ap_return_7();
    void thread_cet1_write_assign_fu_156_p3();
    void thread_cet2_write_assign_fu_252_p3();
    void thread_eta1_write_assign_fu_220_p3();
    void thread_eta2_write_assign_fu_188_p3();
    void thread_or_cond_fu_84_p2();
    void thread_phi1_write_assign_fu_172_p3();
    void thread_phi2_write_assign_fu_204_p3();
    void thread_sel_tmp1_fu_132_p3();
    void thread_sel_tmp2_fu_180_p3();
    void thread_sel_tmp3_fu_196_p3();
    void thread_sel_tmp4_fu_212_p3();
    void thread_sel_tmp5_fu_148_p3();
    void thread_sel_tmp6_fu_228_p3();
    void thread_sel_tmp7_fu_244_p3();
    void thread_sel_tmp9_fu_164_p3();
    void thread_sel_tmp_fu_126_p2();
    void thread_tet1_write_assign_fu_140_p3();
    void thread_tet2_write_assign_fu_236_p3();
    void thread_tmp_1_fu_78_p2();
    void thread_tmp_2_fu_90_p2();
    void thread_tmp_3_fu_96_p2();
    void thread_tmp_4_fu_102_p2();
    void thread_tmp_5_fu_108_p2();
    void thread_tmp_7_fu_114_p2();
    void thread_tmp_8_fu_120_p2();
    void thread_tmp_fu_72_p2();
};

}

using namespace ap_rtl;

#endif
