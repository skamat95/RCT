// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module mergeClusters (
        ieta1,
        iphi1,
        itet1,
        icet1,
        ieta2,
        iphi2,
        itet2,
        icet2,
        ap_return_0,
        ap_return_1,
        ap_return_2,
        ap_return_3,
        ap_return_4,
        ap_return_5,
        ap_return_6,
        ap_return_7
);

parameter    ap_const_lv16_0 = 16'b0000000000000000;
parameter    ap_const_lv16_2 = 16'b10;

input  [15:0] ieta1;
input  [15:0] iphi1;
input  [15:0] itet1;
input  [15:0] icet1;
input  [15:0] ieta2;
input  [15:0] iphi2;
input  [15:0] itet2;
input  [15:0] icet2;
output  [15:0] ap_return_0;
output  [15:0] ap_return_1;
output  [15:0] ap_return_2;
output  [15:0] ap_return_3;
output  [15:0] ap_return_4;
output  [15:0] ap_return_5;
output  [15:0] ap_return_6;
output  [15:0] ap_return_7;

wire   [0:0] tmp_fu_72_p2;
wire   [0:0] tmp_1_fu_78_p2;
wire   [0:0] or_cond_fu_84_p2;
wire   [0:0] tmp_2_fu_90_p2;
wire   [0:0] sel_tmp_fu_126_p2;
wire   [15:0] tmp_4_fu_102_p2;
wire   [15:0] tmp_8_fu_120_p2;
wire   [15:0] sel_tmp1_fu_132_p3;
wire   [15:0] tmp_3_fu_96_p2;
wire   [15:0] sel_tmp5_fu_148_p3;
wire   [15:0] sel_tmp9_fu_164_p3;
wire   [15:0] sel_tmp2_fu_180_p3;
wire   [15:0] sel_tmp3_fu_196_p3;
wire   [15:0] sel_tmp4_fu_212_p3;
wire   [15:0] tmp_5_fu_108_p2;
wire   [15:0] tmp_7_fu_114_p2;
wire   [15:0] sel_tmp6_fu_228_p3;
wire   [15:0] sel_tmp7_fu_244_p3;
wire   [15:0] eta1_write_assign_fu_220_p3;
wire   [15:0] phi1_write_assign_fu_172_p3;
wire   [15:0] tet1_write_assign_fu_140_p3;
wire   [15:0] cet1_write_assign_fu_156_p3;
wire   [15:0] eta2_write_assign_fu_188_p3;
wire   [15:0] phi2_write_assign_fu_204_p3;
wire   [15:0] tet2_write_assign_fu_236_p3;
wire   [15:0] cet2_write_assign_fu_252_p3;

assign ap_return_0 = eta1_write_assign_fu_220_p3;

assign ap_return_1 = phi1_write_assign_fu_172_p3;

assign ap_return_2 = tet1_write_assign_fu_140_p3;

assign ap_return_3 = cet1_write_assign_fu_156_p3;

assign ap_return_4 = eta2_write_assign_fu_188_p3;

assign ap_return_5 = phi2_write_assign_fu_204_p3;

assign ap_return_6 = tet2_write_assign_fu_236_p3;

assign ap_return_7 = cet2_write_assign_fu_252_p3;

assign cet1_write_assign_fu_156_p3 = ((or_cond_fu_84_p2[0:0] === 1'b1) ? sel_tmp5_fu_148_p3 : icet1);

assign cet2_write_assign_fu_252_p3 = ((or_cond_fu_84_p2[0:0] === 1'b1) ? sel_tmp7_fu_244_p3 : icet2);

assign eta1_write_assign_fu_220_p3 = ((or_cond_fu_84_p2[0:0] === 1'b1) ? sel_tmp4_fu_212_p3 : ieta1);

assign eta2_write_assign_fu_188_p3 = ((or_cond_fu_84_p2[0:0] === 1'b1) ? sel_tmp2_fu_180_p3 : ieta2);

assign or_cond_fu_84_p2 = (tmp_fu_72_p2 | tmp_1_fu_78_p2);

assign phi1_write_assign_fu_172_p3 = ((or_cond_fu_84_p2[0:0] === 1'b1) ? sel_tmp9_fu_164_p3 : iphi1);

assign phi2_write_assign_fu_204_p3 = ((or_cond_fu_84_p2[0:0] === 1'b1) ? sel_tmp3_fu_196_p3 : iphi2);

assign sel_tmp1_fu_132_p3 = ((sel_tmp_fu_126_p2[0:0] === 1'b1) ? tmp_4_fu_102_p2 : tmp_8_fu_120_p2);

assign sel_tmp2_fu_180_p3 = ((sel_tmp_fu_126_p2[0:0] === 1'b1) ? ap_const_lv16_2 : ieta2);

assign sel_tmp3_fu_196_p3 = ((sel_tmp_fu_126_p2[0:0] === 1'b1) ? ap_const_lv16_2 : iphi2);

assign sel_tmp4_fu_212_p3 = ((sel_tmp_fu_126_p2[0:0] === 1'b1) ? ieta1 : ap_const_lv16_2);

assign sel_tmp5_fu_148_p3 = ((sel_tmp_fu_126_p2[0:0] === 1'b1) ? tmp_3_fu_96_p2 : ap_const_lv16_0);

assign sel_tmp6_fu_228_p3 = ((sel_tmp_fu_126_p2[0:0] === 1'b1) ? tmp_5_fu_108_p2 : tmp_7_fu_114_p2);

assign sel_tmp7_fu_244_p3 = ((sel_tmp_fu_126_p2[0:0] === 1'b1) ? ap_const_lv16_0 : tmp_3_fu_96_p2);

assign sel_tmp9_fu_164_p3 = ((sel_tmp_fu_126_p2[0:0] === 1'b1) ? iphi1 : ap_const_lv16_2);

assign sel_tmp_fu_126_p2 = (or_cond_fu_84_p2 & tmp_2_fu_90_p2);

assign tet1_write_assign_fu_140_p3 = ((or_cond_fu_84_p2[0:0] === 1'b1) ? sel_tmp1_fu_132_p3 : itet1);

assign tet2_write_assign_fu_236_p3 = ((or_cond_fu_84_p2[0:0] === 1'b1) ? sel_tmp6_fu_228_p3 : itet2);

assign tmp_1_fu_78_p2 = ((iphi1 == iphi2) ? 1'b1 : 1'b0);

assign tmp_2_fu_90_p2 = ((icet1 > icet2) ? 1'b1 : 1'b0);

assign tmp_3_fu_96_p2 = (icet2 + icet1);

assign tmp_4_fu_102_p2 = (icet2 + itet1);

assign tmp_5_fu_108_p2 = (itet2 - icet2);

assign tmp_7_fu_114_p2 = (itet2 + icet1);

assign tmp_8_fu_120_p2 = (itet1 - icet1);

assign tmp_fu_72_p2 = ((ieta1 == ieta2) ? 1'b1 : 1'b0);

endmodule //mergeClusters
